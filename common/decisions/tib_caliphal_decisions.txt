@pay_homage_to_caliph_cooldown_years = 10

# Expanded decisions for the Caliph!
caliphal_revolution_decision = {
	picture = "gfx/interface/illustrations/decisions/huan_kecheng1_narrow.dds"
	major = yes
	sort_order = 90

	ai_check_interval = 24

	desc = caliphal_revolution_decision_desc
	selection_tooltip = caliphal_revolution_decision_tooltip

	is_shown = {
		# Standard filter checks.
		is_landed = yes
		exists = dynasty
		# Check some religious stuff; namely that you're the correct religion and your existing-HoF doesn't share your faith.
		religion = religion:islam_religion
		exists = faith.religious_head
		NOT = {
            faith.religious_head = {
                this = root
            }
        }
		#faith.religious_head = {
		#	is_within_diplo_range = { CHARACTER = root }
		#}
		# And filter out anyone who'd make this unreliable.
		OR = {
			government_has_flag = government_is_tribal
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
            government_has_flag = government_is_islamic
		}
	}

	is_valid = {
		# Should have a decent piety level.
		piety_level >= high_piety_level
		# Must have a decent proportion of sub-realm counties of the faith.
		#custom_description = {
		#	text = appoint_a_righteous_caliph_decision.need_at_least_ten_same_faith_counties
		#	any_sub_realm_county = {
		#		count >= appoint_a_righteous_caliph_decision_same_faith_county_count
		#		faith = root.faith
		#	}
		#}

        # Hates the current Caliph
        faith.religious_head = {
            exists = this
            opinion = {
                target = root
                value < high_positive_opinion
            }
        }
		# Can't be the current caliphal controller
		custom_description = {
			text = appoint_a_righteous_caliph_decision.cant_be_caliphal_controller
			NOT = {
				faith.religious_head = {
					any_liege_or_above = { this = root }
				}
			}
		}
		# Plus, you shouldn't be _too_ sinful, even with your piety level.
		custom_description = {
			text = appoint_a_righteous_caliph_decision.no_more_than_x_sinful_traits
			num_sinful_traits <= 2
		}
		# Now, pick any three of the valid reasons.
		calc_true_if = {
			amount >= 1

			# Sayyids get a free pass.
			has_trait = sayyid
			# Being outside of your caliph's diplo range helps.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.caliph_not_in_diplo_range
				NOT = { in_diplomatic_range = faith.religious_head }
			}
			# Having a higher-than-minimum piety level.
			piety_level >= very_high_piety_level
			# And just having a caliph who doesn't live up to the root's faith's ideals.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.caliph_has_x_or_more_traits_sinful_to_your_faith
				faith.religious_head = {
					num_sinful_traits = {
						value >= 2
						faith = root.faith
					}
				}
			}
			# Has planned to schism off for a *while*.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.has_wishes_to_schism_caliphate_flag
				has_character_flag = wishes_to_schism_caliphate_flag
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		# Has to be around for the ceremony.
		not = { exists = involved_activity }
		has_contagious_deadly_disease_trigger = no
		# Has to be a valid priestly gender for the current faith.
		faith = { has_allowed_gender_for_clergy = root }
	}

	effect = {
        save_scope_as = founder
		faith.religious_head = { save_scope_as = old_caliph }
        # PREREQUISITES ASPECT
        custom_tooltip = caliphal_revolution_decision.tt.revolution_war
        # Give scope:founder an extra piety level, if possible.
        if = {
            limit = { piety_level < max_piety_level }
            add_piety_level = 1
        }
        # If you've pulled a fast one on your HoF, they see through it.
        if = {
            limit = { has_character_flag = wishes_to_schism_caliphate_flag }
            scope:old_caliph = {
                remove_opinion = {
                    target = scope:founder
                    modifier = repentant_opinion
                }
            }
            remove_hook = {
                target = scope:old_caliph
                type = indebted_hook
            }
        }
        # And sort a bit of stress impact for the gravity of things.
        stress_impact = {
            base = medium_stress_impact_gain
            humble = major_stress_impact_gain
            arrogant = major_stress_impact_loss
            ambitious = major_stress_impact_loss
        }
        # END

        ## REVOLUTION ASPECT
		# Gives army to the contender
        spawn_army = {
            uses_supply = yes
            inheritable = yes
            name = "Caliphal Contender Jihadists"
            men_at_arms = {
                type = abudrar
                stacks = 5
            }
            men_at_arms = {
                type = light_horsemen
                stacks = 5
            }
            men_at_arms = {
                type = light_horsemen
                stacks = 5
            }
            men_at_arms = {
                type = armored_horsemen
                stacks = 5
            }
            men_at_arms = {
                type = mangonel
                stacks = 1
            }
            men_at_arms = {
                type = bowmen
                stacks = 3
            }
            men_at_arms = {
                type = pikemen_unit
                stacks = 3
            }
            location = capital_province
        }

        # Trigger war declaration event
		trigger_event = caliphal_contender_declare_war.10

		# Notify co-faithists; we do this first so we can sort the feed message for how many did/didn't convert.
		#faith = {
		#	every_faith_ruler = {
		#		limit = {
		#			highest_held_title_tier >= tier_county
		#			NOT = { this = root }
		#		}
		#		trigger_event = religious_decision.0602
		#	}
		#}
		# Now notify other players.
		every_player = {
			limit = {
				OR = {
					religion = religion:islam_religion
					any_neighboring_and_across_water_top_liege_realm_owner = { this = root }
					any_liege_or_above = { religion = religion:islam_religion }
				}
				# Exempt same-faith characters, who already got an event.
				NOT = { faith = root.faith }
			}
			# Players who share the faith get 
			trigger_event = religious_decision.0603
		}
		
	}

	cost = {
		prestige = 1000
		piety = 4000
	}

	ai_potential = {
		# Must be independent.
		#is_independent_ruler = yes
		# Should have a decent piety level.
		piety_level >= high_piety_level
		OR = {
			# Zealous people think they know better.
			has_trait = zealous
			# And cynics want that power for themselves.
			has_trait = cynical
			# We guide Muwalladi towards this at the first opportunity.
			faith = faith:muwalladi
            AND = { # For Sayyid individuals
                OR = {
                    # Zealous people think they know better.
			        has_trait = zealous
			        # And cynics want that power for themselves.
			        has_trait = cynical
                    # Ambitious individuals
                    has_trait = ambitious
                }
                has_trait = sayyid
            }
		}
	}

	ai_will_do = {
		base = 40

		# If ai_zeal is 20 points higher than ai_greed, becomes 100% chance.
		ai_value_modifier = {
			ai_zeal = 5
			ai_content = -5
		}
		modifier = { # More likely to get his claim
			add = 40
			is_extended_family_of = faith.religious_head
		}
		modifier = {	# Having a tolerant faith helps
			add = -25
			faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		modifier = {	# Fundamentalists more likely to revolt
			add = 35
			faith = { has_doctrine = doctrine_pluralism_fundamentalist }
			faith = {
				fervor <= medium_fervor_value
			}
		}
		modifier = {	# Prone to schism
			add = 30
			faith = {
				fervor <= minor_fervor_value
			}
		}
	}
}

demote_other_culture_development_decision = { # Mawali simulation
	title = demote_other_culture_development_decision_name
	picture = "gfx/interface/illustrations/decisions/islamic_court_council_narrow.dds"
	desc = demote_other_culture_development_decision_desc
	selection_tooltip = demote_other_culture_development_decision_tooltip
	cooldown = { years = 10 }
	major = no
	sort_order = 90

	is_shown = {
		has_flag = government_is_islamic
		root = faith.religious_head
	}
	is_valid = {
		has_realm_law = tib_caliphal_authority_2 
	}

	#is_valid_showing_failures_only = {
	#	custom_tooltip = {
	#		text = promote_other_culture_development_decision_not_acceptance_tt
	#		any_sub_realm_county = {
	#			count > 0
	#			AND = {
	#				NOT = { culture = root.culture}
	#				culture = {
	#					cultural_acceptance = {
	#						target = ROOT.culture
	#						value >= 75
	#					}
	#				}
	#			}
	#		}
	#	}
	#}

	effect = {
		# Add a modifier on the caliph who issued the edict
		add_character_modifier = {
			modifier = demote_culture_leader_modifier
			years = 10
		}

		# Collect the list of Cultures which will be affected 
		hidden_effect = {
			every_sub_realm_county = {
				if = {
					limit = {
						NOT = {
							culture = {
								any_in_list = {
									list = promoted_culture
									this = prev
								}
							}
						}
						NOT = {	root.culture = culture }
						faith = { religion_tag = islam_religion }
						culture = {
							cultural_acceptance = {
								target = ROOT.culture
								value <= 30
							}
						}
					}
					culture = { add_to_temporary_list = promoted_culture }
				}
			}
		}

		#Generate intelligible effect
		if = {
			root.culture = {
				this =  { save_scope_as = current_culture }
				custom_tooltip = promote_other_culture_development_decision_effect_summary
			}
			limit = {
				any_in_list = {
					list = promoted_culture
					count > 0
				}
			}
			every_in_list = {
				list = promoted_culture
				this =  { save_scope_as = current_culture }
				custom_tooltip = demote_other_culture_development_decision_effect_summary #see if a modifier can be injected for better effect
			}
		}
		else = {
			custom_tooltip = demote_other_culture_development_decision_no_effect
		}
		
		# Apply the actual effect: add a County Modifier on the relevant Counties
		hidden_effect = {
			every_sub_realm_county = {
				if = {
					limit = {
						NOT = { culture = root.culture }
						faith = { religion_tag = islam_religion }
						culture = {
							cultural_acceptance = {
								target = root.culture
								value <= 30
							}
						}
					}
				 	add_county_modifier = {
				 		modifier = demote_culture_modifier
				 		years = 10
				 	}
				}
			}
			every_sub_realm_county = {
				if = {
					limit = {
						culture = root.culture
					}
				 	add_county_modifier = {
				 		modifier = promote_culture_modifier
				 		years = 10
				 	}
				}
			}
		}
	}

	cost = {
		prestige = {
			value = medium_prestige_value
			every_sub_realm_county = {
				if = {
					limit = {
						NOT = { culture = root.culture }
						culture = {
							cultural_acceptance = {
								target = root.culture
								value <= 30
							}
						}
					}
					add = 10
				}
			}
		}
		piety = {
			value = medium_piety_value
			every_sub_realm_county = {
				if = {
					limit = {
						NOT = { culture = root.culture }
						culture = {
							cultural_acceptance = {
								target = root.culture
								value <= 30
							}
						}
					}
					add = 10
				}
			}
		}
	}

	ai_check_interval = 120
	
	ai_potential = {
		is_at_war = no
		# Has enough gold.
		short_term_gold >= ai_war_chest_desired_gold_value
		NOR = {
			has_trait = lazy
			has_trait = callous
		}
	}

	ai_will_do = {
		base = 5
		modifier = {
			add = 50
			has_trait = arrogant
			has_trait = greedy
		}
		modifier = {
			add = 50
			short_term_gold <= ai_war_chest_desired_gold_value
		}
		modifier = {
			add = -50
			OR = {
				has_trait = just
				has_trait = forgiving
				has_trait = compassionate
				has_trait = zealous
			}
		}
	}
}

pay_homage_to_caliph_decision = {
	ai_check_interval = 45
	picture = "gfx/interface/illustrations/decisions/islamic_court_council_bowing_narrow.dds"
	major = yes
	#sort_order = 1

	cost = {
		prestige = standard_activity_cost
		gold = {
			value = 0
			if = {
				limit = {
					exists = scope:pay_homage_gold
					scope:pay_homage_gold = yes
				}
				add = medium_gold_value
			}
		}
	}

	is_shown = {
		is_landed = yes
		primary_title.tier >= tier_county
		exists = faith.religious_head
		#faith.religious_head = { has_royal_court = yes }
		OR = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
			government_has_flag = government_is_islamic
		}
		faith = { religion_tag = islam_religion }
		NOT = {
			faith.religious_head = {
				this = root
			}
		}
	}

	is_valid = {
		custom_tooltip = {
			text = "has_pay_homage_to_caliph_cooldown"
			trigger_if = { # Has not paid homage to this faith.religious_head before
				limit = {
					has_variable = pay_homage_to_caliph_cooldown
					exists = faith.religious_head
				}
				NOT = { var:pay_homage_to_caliph_cooldown = faith.religious_head }
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		faith.religious_head = { is_available_adult = yes }
		#is_at_war_with_liege = no
		trigger_if = {
			limit = {
				is_ai = no
				has_royal_court = yes
			}
			has_spawned_court_events = no # should only be used for human players
		}
		trigger_if = { # Has not paid homage to this faith.religious_head before
			limit = { 
				has_variable = pay_homage_to_caliph_cooldown
				exists = faith.religious_head
			}
			custom_tooltip = {
				text = pay_homage_to_caliph_cooldown_tt
				NOT = { var:pay_homage_grace = faith.religious_head }
			}
		}
		trigger_if = {
			limit = { is_ai = yes }
			NOT = {
				faith.religious_head = { has_variable = pay_homage_to_caliph_cooldown }
			}
		}
	}

	widget = {
		gui = "decision_view_widget_pay_homage"
		controller = decision_option_list_controller
		decision_has_second_step = yes
		decision_custom_widget_container = "custom_widgets_container_step_two"
		decision_to_second_step_button = "PAY_HOMAGE_DECISION_NEXT_STEP_BUTTON"

		item = { # Submission
			value = pay_homage_submission
			is_valid = {}
			current_description = pay_homage_to_caliph_submission_desc
			localization = pay_homage_to_caliph_decision_option_submission
			icon = "gfx/interface/icons/icon_liege.dds"
			ai_chance = { # Always likely
				value = 50
				if = { # Generous vassals want to give gold if they can!
					limit = {
						ai_greed <= -50
						gold >= medium_gold_value
					}
					add = -50
				}
			}
		}

		item = { # Hook
			value = pay_homage_hook
			is_valid = {
				custom_tooltip = { # faith.religious_head does not already have a hook
					text = pay_homage_hook_tt
					NOT = {
						faith.religious_head = { has_hook = prev } 
					}
				}
			}
			current_description = pay_homage_to_caliph_hook_desc
			localization = pay_homage_to_caliph_decision_option_hook
			icon = "gfx/interface/icons/message_feed/hook.dds"
			ai_chance = { # More likely if family
				value = 25
				if = {
					limit = { is_close_or_extended_family_of = faith.religious_head }
					add = 25
				}
				if = { # Certain AI's really do not want to be indebted
					limit = {
						OR = {
							has_trait = paranoid
							has_trait = arrogant
							ai_greed >= 50
						}
					}
					add = -50
				}
			}
		}

		item = { # Gold
			value = pay_homage_gold
			is_valid = {
				custom_tooltip = { # Can afford gold homage
					text = pay_homage_to_caliph_gold_tt
					gold >= medium_gold_value # Can afford gold homage
				}
			}
			current_description = pay_homage_to_caliph_gold_desc
			localization = pay_homage_to_caliph_decision_option_gold
			icon = "gfx/interface/icons/message_feed/money.dds"
			ai_chance = { # More likely if rich
				value = 50
				if = {
					limit = { gold > major_gold_value }
					add = 50
				}
				
				if = { # Certain AI's really do not want to part with gold
					limit = {
						ai_greed >= 50
					}
					add = -100
				}
			}
		}
	}

	effect = {
		set_variable = {
			name = homage_caliph_scope
			value = faith.religious_head
		}
		custom_tooltip = pay_homage_to_caliph_decision_effects
		custom_description_no_bullet = { text = pay_homage_gift_warning_effect }
		if = { # Gift
			limit = { scope:pay_homage_gold = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_gold
			}
			# used for refunding if travel is canceled mid-way
			set_variable = {
				name = pay_homage_gold_value 
				value = medium_gold_value
			}
			custom_tooltip = pay_homage_decision_effects_gold
		}
		else_if = { # Hook
			limit = { scope:pay_homage_hook = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_hook
			}
			custom_tooltip = pay_homage_decision_effects_hook
		}
		else_if = { # Contract
			limit = { scope:pay_homage_contract = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_contract
			}
			if = {
				limit = {
					vassal_contract_obligation_level:feudal_government_levies < vassal_contract_obligation_level:feudal_government_taxes
					vassal_contract_obligation_level_can_be_increased = feudal_government_levies
				}
				custom_tooltip = pay_homage_decision_effects_contract_levies
			}
			else_if = {
				limit = {
					vassal_contract_obligation_level:feudal_government_taxes < vassal_contract_obligation_level:feudal_government_levies
					vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
				}
				custom_tooltip = pay_homage_decision_effects_contract_gold
			}
			else = {
				if = {
					limit = { vassal_contract_obligation_level_can_be_increased = feudal_government_taxes }
					custom_tooltip = pay_homage_decision_effects_contract_gold
				}
				else = { custom_tooltip = pay_homage_decision_effects_contract_gold }
			}
			hidden_effect = { set_vassal_contract_modification_blocked = yes }
		}
		else = { # Submission
			set_variable = {
				name = homage_type
				value = flag:homage_submission
			}
		}
		show_as_tooltip = {
			switch = {
				trigger = has_trait
				shy = { add_stress = medium_stress_impact_gain }
				arrogant = { add_stress = medium_stress_impact_gain }
			}
		}
		save_scope_as = homage_vassal
		if = {
			limit = { exists = faith.religious_head } # To stop errors
			faith.religious_head = { save_scope_as = homage_caliph }
		}
		start_travel_plan = {
			destination = faith.religious_head.capital_province
			on_start_on_action = pay_homage_start
			on_travel_planner_cancel_on_action = pay_homage_travel_planner_exit
			on_arrival_event = pay_homage.9999
			on_arrival_destinations = all_but_last
		}
	}
	
	ai_potential = {
		is_at_war = no
	}

	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			prestige > standard_activity_cost
		}
		modifier = { # AI's who can give gold are more likely
			add = 50
			gold >= medium_gold_value
			ai_greed < 50
			primary_title.tier > tier_county
		}
		modifier = {
			add = -50
			has_relation_rival = faith.religious_head
		}
		modifier = {
			add = -25
			opinion = {
				target = faith.religious_head
				value < 0
			}
		}
		modifier = { # Dukes/kings should be more weighted
			add = 25
			primary_title.tier >= tier_duchy
		}
		modifier = { # Barons should be less weighted
			add = -25
			primary_title.tier < tier_county
		}
	}
}